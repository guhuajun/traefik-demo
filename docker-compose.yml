version: "3"

services: 
  traefik:
    image: traefik:2.1
    hostname: traefik
    # Enables the web UI and tells Traefik to listen to docker
    command: [
      "--api.insecure=true", 
      "--providers.docker", 
      "--metrics.prometheus=true",
      "--tracing.jaeger=true",
      "--tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling",
      "--tracing.jaeger.localAgentHostPort=jaeger:6831"
    ]
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks: 
      traefik:
        ipv4_address: 192.168.10.10


  # demo apps
  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.app.contoso.com`)"
    networks: 
      traefik:

  vote:
    image: voting/vote:0.1
    labels:
      - "traefik.http.routers.vote.rule=Host(`vote.app.contoso.com`)"
    ports:
      - 5000:80
    networks: 
      traefik:
    depends_on: 
      - db
      - redis

  worker:
    image: voting/worker:0.1
    networks: 
      traefik:
    depends_on: 
      - db
      - redis

  result:
    image: voting/result:0.1
    labels:
      - "traefik.http.routers.result.rule=Host(`result.app.contoso.com`)"
    ports:
      - 5001:80
      - 5858:5858
    networks: 
      traefik:
    depends_on: 
      - db
      - redis

  redis:
    image: redis:alpine
    hostname: redis
    networks: 
      traefik:

  db:
    image: postgres:9.4
    hostname: db
    networks: 
      traefik:

  # tracing
  jaeger:
    image: jaegertracing/all-in-one:1.16.0
    hostname: jaeger
    ports:
      - 16686:16686    
    networks: 
      traefik:    

  # locust:
  #   image: greggu/traefik-locust:0.1
  #   hostname: locust
  #   build:
  #     context: ./locust
  #   command:
  #     [
  #       "locust",
  #       "-f",
  #       "locustfile.py",
  #       "--host",
  #       "http://whoami.app.contoso.com",
  #       "--no-web",
  #       "-c",
  #       "100",
  #       "-r",
  #       "20",
  #       "--skip-log-setup",
  #     ]
  #   extra_hosts: 
  #     whoami.app.contoso.com: 192.168.10.10
  #   networks: 
  #     traefik:

  # monitoring
  prometheus:
    image: prom/prometheus:v2.11.1
    hostname: prometheus
    networks:
      traefik:
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/conf/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - traefik

  grafana:
    image: grafana/grafana:6.2.5
    hostname: grafana
    networks:
      traefik:
    ports:
      - 3000:3000
    environment:
      - GF_ALERTING_ENABLED:false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - traefik

networks: 
  traefik:
    ipam:
      driver: default
      config:
        - subnet: "192.168.10.0/24"
